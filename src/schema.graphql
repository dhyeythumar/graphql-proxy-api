# TODO :: Adding pagination filter options

type Query {
    "Project Intro"
    info: String

    # --- User Queries ---
    "Fetch Users"
    users("Sort Users based on UsesId" sort: Sort): [User!]!

    "Fetch single User based on UserId"
    user("Fetch User Based on UserId" userId: ID!): User!

    # --- Post Queries ---
    "Fetch Posts"
    posts(
        "Fetch Posts based on UserId"
        userId: ID
        "Sort Posts based on PostId"
        sort: Sort
    ): [Post!]!

    "Fetch single Post based on PostId"
    post(postId: ID!): Post!

    # --- Comment Queries ---
    "Fetch Comments"
    comments(
        "Fetch Comments based on PostId"
        postId: ID
        "Sort Comments based on CommentId"
        sort: Sort
    ): [Comment!]!

    "Fetch single Comment based on CommentId"
    comment(commentId: ID!): Comment!
}

enum Sort {
    "In Ascending Order"
    asc
    "In Descending Ordes"
    desc
}

type User {
    id: ID!
    name: String!
    username: String!
    email: String!
    phone: String!
    website: String
    address: Address
    company: Company

    "User created Posts"
    posts: [Post!]!

    # "User created Albums"
    # albums: [Album!]!

    # "User created Todos"
    # todos: [Todo!]!
}
type Address {
    street: String
    suite: String
    city: String
    zipcode: String
    geo: Geo
}
type Geo {
    lat: String
    lng: String
}
type Company {
    name: String
    catchPhrase: String
    bs: String
}

type Post {
    postId: ID!
    userId: ID!
    title: String!
    body: String!

    # Comments on a Post
    comments: [Comment!]!
}
type Comment {
    commentId: ID!
    postId: ID!
    name: String!
    email: String!
    body: String!
}

type Mutation {
    # --- Users Mutations ---
    "Create User"
    createUser("Object to create new User" input: UserCreateInput!): User!

    "Update an existing User"
    updateUser(
        userId: ID!
        "Object to update an existsing User"
        input: UserUpdateInput!
    ): User!

    "Delete an existing Post"
    deleteUser(userId: ID!): User!

    # --- Posts Mutations ---
    "Create Post"
    createPost(userId: ID!, title: String!, body: String!): Post!

    "Update an existing Post"
    updatePost(postId: ID!, title: String, body: String): Post!

    "Delete an existing Post"
    deletePost(postId: ID!): Post!

    # --- Comments Mutations ---
    "Create Comment"
    createComment(
        postId: ID!
        name: String!
        email: String!
        body: String!
    ): Comment!

    "Update an existing Comment"
    updateComment(commentId: ID!, body: String): Comment!

    "Delete an existing Comment"
    deleteComment(commentId: ID!): Comment!
}

input UserCreateInput {
    name: String!
    username: String!
    email: String!
    phone: String!
    website: String
    address: AddressInput
    company: CompanyInput
}
input UserUpdateInput {
    name: String
    username: String
    email: String
    phone: String
    website: String
    address: AddressInput
    company: CompanyInput
}
input AddressInput {
    street: String
    suite: String
    city: String
    zipcode: String
    geo: GeoInput
}
input GeoInput {
    lat: String
    lng: String
}
input CompanyInput {
    name: String
    catchPhrase: String
    bs: String
}
